// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using question.model;

namespace question.model.Migrations
{
    [DbContext(typeof(QuestionContext))]
    partial class QuestionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("questionDb")
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("question.domain.Choice", b =>
                {
                    b.Property<int>("ChoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("choiceId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChoiceName")
                        .HasColumnName("choiceName");

                    b.Property<int?>("QuestionId");

                    b.Property<int>("Votes")
                        .HasColumnName("votes");

                    b.HasKey("ChoiceId")
                        .HasName("choiceId");

                    b.HasIndex("QuestionId");

                    b.ToTable("tbChoise");
                });

            modelBuilder.Entity("question.domain.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("questionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnName("imageUrl");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnName("publishedAt");

                    b.Property<string>("QuestionName")
                        .HasColumnName("questionName");

                    b.Property<string>("ThumbUrl")
                        .HasColumnName("thumbUrl");

                    b.HasKey("QuestionId")
                        .HasName("questionID");

                    b.ToTable("tbQuestion");
                });

            modelBuilder.Entity("question.domain.Choice", b =>
                {
                    b.HasOne("question.domain.Question", "Question")
                        .WithMany("Choices")
                        .HasForeignKey("QuestionId");
                });
#pragma warning restore 612, 618
        }
    }
}
